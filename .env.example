# API
APP_ENV=dev
HOST=0.0.0.0
PORT=8000
APP_DATA_DIR=/app/data
APP_LOG_DIR=/app/logs
PYTHONPATH=/app


# Elasticsearch
ES_HOST=http://elasticsearch:9200
ES_PRIVATE_INDEX=private_user_memory
ES_PUBLIC_INDEX=public_medical_kb
ES_PLACES_INDEX=providers_places


# Embeddings
EMBEDDINGS_MODEL=sentence-transformers/all-MiniLM-L6-v2
EMBEDDINGS_DEVICE=cpu


# LLM provider (optional): openai | none
LLM_PROVIDER=none
OPENAI_API_KEY=

# ML risk classifier (no hardcoded rules)
# Multilingual NLI model works for EN/HE reasonably well
RISK_MODEL_ID=MoritzLaurer/mDeBERTa-v3-base-mnli-xnli
RISK_LABELS=urgent_care,see_doctor,self_care,info_only
# per-label thresholds for deciding when to raise an alert (others treated as info/self-care)
RISK_THRESHOLDS=urgent_care:0.55,see_doctor:0.50
# Hypothesis template used for NLI-based classification
RISK_HYPOTHESIS=This situation requires {}.
# Comma-separated phrases (list each variant explicitly) that should bypass meds onset gating and force ML scoring
RISK_ONSET_RED_FLAGS=chest pain,chest pains,bleed,bleeding,hemorrhage,hemorrhaging

# Intent routing (embedding exemplars)
# Optional path to exemplars JSON/JSONL generated by scripts/build_intent_exemplars.py
# Default points to a runtime-mounted data file
INTENT_EXEMPLARS_PATH=/app/data/intent_exemplars.jsonl
INTENT_THRESHOLD=0.30
INTENT_MARGIN=0.05

INTENT_LANGS=en,he

# Fallback templates (pattern-based) for symptom buckets
FALLBACK_TEMPLATES_PATH=/app/data/safety_templates.json
FALLBACK_TEMPLATES_WATCH=false

# Symptom registry (doc routing + query expansions)
SYMPTOM_REGISTRY_PATH=/app/registry/symptoms.yml
