name: PR Nudges
permissions:
  contents: write
  pull-requests: write
on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
jobs:
  nudges:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Ensure PR body populated
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const body = context.payload.pull_request?.body ?? '';
            const placeholders = [
              'Describe the user-facing impact (1–2 sentences).',
              'Provide ≤90s runnable steps that exercise the change end-to-end.',
              'Replace the guidance below with the checks you actually ran.',
              'e.g. `services/api/tests/unit/test_answer_gen.py::test_answer_gen_meds_onset_uses_memory_fact`',
              'What multilingual behaviour did you validate?',
              'Log/metric/debug signal showing the path is used.',
              'Confirm risk messaging, disclaimers, or red-flag behaviour.',
              'Bullet the work shipped in this PR.',
              'Call out intentionally deferred items.',
              'Note datasets/files touched, sources/licenses, and how to refresh/extend them.',
              'Explain how to disable or revert the change (env flag, config toggle, etc.).',
              'Highlight key risks and how you’re mitigating or monitoring them.',
              'Link to updated docs or “N/A”. Add follow-up tasks if needed.'
            ];
            const hits = placeholders.filter(text => body.includes(text));
            if (hits.length) {
              core.setFailed(`PR description still contains template placeholders: ${hits.join(', ')}`);
            }
      - name: Collect diff stats
        id: diff
        run: |
          BASE_SHA="${{ github.event.pull_request.base.sha }}"
          HEAD_SHA="${{ github.event.pull_request.head.sha }}"
          LOC_ADDED=$(git diff --numstat "$BASE_SHA" "$HEAD_SHA" | awk '{add+=$1} END {print add+0}')
          CHANGED_FILES=$(git diff --name-only "$BASE_SHA" "$HEAD_SHA")
          echo "loc=$LOC_ADDED" >> "$GITHUB_OUTPUT"
          printf '%s\n' "$CHANGED_FILES" > changed_files.txt
      - name: Determine nudges
        id: nudges
        run: |
          CHANGED_FILES=$(cat changed_files.txt)
          NEEDS_DEMO="false"
          NEEDS_TESTS="false"
          LOC=${{ steps.diff.outputs.loc }}
          if [ "$LOC" -gt 400 ]; then
            NEEDS_DEMO="true"
          fi
          if echo "$CHANGED_FILES" | grep -q '^services/api/app/graph/nodes/'; then
            if ! echo "$CHANGED_FILES" | grep -q '^services/api/tests/'; then
              NEEDS_TESTS="true"
            fi
          fi
          echo "needs_demo=$NEEDS_DEMO" >> "$GITHUB_OUTPUT"
          echo "needs_tests=$NEEDS_TESTS" >> "$GITHUB_OUTPUT"
      - name: Post reminder comment
        if: steps.nudges.outputs.needs_demo == 'true' || steps.nudges.outputs.needs_tests == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const needsDemo = ${{ steps.nudges.outputs.needs_demo == 'true' }};
            const needsTests = ${{ steps.nudges.outputs.needs_tests == 'true' }};
            let body = [];
            if (needsDemo) {
              body.push('⚠️  LOC > 400 — fill the Demo section with runnable steps that take 90 seconds or less.');
            }
            if (needsTests) {
              body.push('⚠️  `services/api/app/graph/nodes/*` changed but no tests were updated. Add or extend coverage before merging.');
            }
            if (body.length) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body.join('\n')
              });
            }
